{"version":3,"sources":["serviceWorker.js","Components/PokemonCard/PokemonCard.jsx","Pages/Home/home.js","Components/PokemonDetail/PokemonDetail.jsx","Pages/Detail/detail.js","app.js","index.js"],"names":["Boolean","window","location","hostname","match","PokemonCard","target","this","props","history","push","pathname","name","state","home","className","onClick","cardClick","bind","height","width","alt","src","id","Component","withRouter","Home","URL","pokemon","prevLink","nextLink","leftArrowClick","rightArrowClick","document","documentElement","style","setProperty","getPokemon","axios","get","then","response","data","previous","next","setState","results","map","index","key","url","replace","error","console","log","type","PokemonDetail","colorThief","ColorThief","image","Image","addEventListener","color","getColor","imageURL","crossOrigin","encodeURIComponent","types","stats","Object","values","max","i","length","entries","stat","value","getStatHeader","ProgressBar","now","header","weight","eggGroups","eg","abilities","ab","renderTypes","renderStats","genus","description","renderProfile","Detail","detailView","params","getDetail","finally","species","sprites","front_default","item","ability","assign","x","base_stat","egg_groups","genera","filter","language","shift","flavor_text_entries","flavor_text","App","exact","path","component","from","to","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"mSAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sGCdAC,G,4LAEiB,EAARC,OACPC,KAAKC,MAAMC,QAAQC,KAAK,CAACC,SAAU,YAAcJ,KAAKC,MAAMI,KAAMC,MAAO,CAAEC,KAAMP,KAAKC,MAAMM,U,+BAI5F,OACI,yBAAKC,UAAU,OAAOC,QAAST,KAAKU,UAAUC,KAAKX,OAC/C,yBAAKQ,UAAU,kBACX,yBAAKA,UAAU,SAASR,KAAKC,MAAMI,OAEvC,yBAAKG,UAAU,kBACX,yBAAKI,OAAO,QAAQC,MAAM,QAAQL,UAAU,QAAQM,IAAI,UAAUC,IAAK,4EAA6Ef,KAAKC,MAAMe,GAAI,e,GAb7JC,cAoBXC,cAAWpB,GC8DXqB,G,mBA9Eb,WAAYlB,GAAO,IAAD,8BAChB,4CAAMA,KAEDmB,IAAM,oCAER,EAAKnB,MAAMN,SAASW,OAAS,EAAKL,MAAMN,SAASW,MAAMC,OACxD,EAAKa,IAAM,EAAKnB,MAAMN,SAASW,MAAMC,MAGvC,EAAKD,MAAQ,CACXe,QAAS,IAGX,EAAKC,SAAW,GAChB,EAAKC,SAAW,GAEhB,EAAKC,eAAiB,EAAKA,eAAeb,KAApB,gBACtB,EAAKc,gBAAkB,EAAKA,gBAAgBd,KAArB,gBAEvBe,SAASC,gBAAgBC,MAAMC,YAAY,kBAAmB,yBAE9D,EAAKC,aArBW,E,0EAyBL,IAAD,OACVC,IAAMC,IAAIhC,KAAKoB,KAAKa,MAAK,SAACC,GACxB,IACE,EAAKZ,SAAWY,EAASC,KAAKC,SAC9B,EAAKb,SAAWW,EAASC,KAAKE,KAC9B,EAAKC,SAAS,CACZjB,QAAS,wBAAIb,UAAU,YAAY0B,EAASC,KAAKI,QAAQC,KAAI,SAACnB,EAASoB,GAAV,OAC3D,wBAAIjC,UAAU,eAAekC,IAAKD,GAAO,kBAAC,EAAD,CAAazB,GAAIK,EAAQsB,IAAIC,QAAQ,qCAAsC,IAAIA,QAAQ,IAAK,IAAKvC,KAAMgB,EAAQhB,KAAMsC,IAAKtB,EAAQsB,IAAKpC,KAAM,EAAKa,aAIjM,MAAMyB,GACJC,QAAQC,IAAIF,S,uCAMK,OAAlB7C,KAAKsB,WACNtB,KAAKoB,IAAMpB,KAAKsB,SAChBtB,KAAK8B,gB,wCAKc,OAAlB9B,KAAKuB,WACNvB,KAAKoB,IAAMpB,KAAKuB,SAChBvB,KAAK8B,gB,+BAKP,OACE,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAYC,QAAST,KAAKwB,gBACvC,kBAAC,IAAD,CAAMwB,KAAK,gBAEb,yBAAKxC,UAAU,SAAf,cAGA,yBAAKA,UAAU,aAAaC,QAAST,KAAKyB,iBACxC,kBAAC,IAAD,CAAMuB,KAAK,kBAGf,yBAAKxC,UAAU,aACVR,KAAKM,MAAMe,c,GAxELJ,c,mECiIJgC,E,YAlIX,WAAYhD,GAAO,IAAD,sBACd,4CAAMA,IAGN,IAAMiD,EAAa,IAAIC,IACjBC,EAAQ,IAAIC,MAElBD,EAAME,iBAAiB,QAAQ,WAC3B,IAAIC,EAAQL,EAAWM,SAASJ,GAChC1B,SAASC,gBAAgBC,MAAMC,YAAY,kBAAmB,OAAS0B,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,QAGxH,IAAIE,EAAW,EAAKxD,MAAMmD,MAZZ,OAedA,EAAMM,YAAc,YACpBN,EAAMrC,IAHe,4GAGQ4C,mBAAmBF,GAhBlC,E,2EAoBd,OAAOzD,KAAKC,MAAM2D,MAAMpB,KAAI,SAACQ,EAAMP,GAAP,OACxB,yBAAKC,IAAKD,EAAOjC,UAAW,QAAUwC,GAClC,yBAAKxC,UAAU,QAAQwC,S,oCAQ/B,IAHU,IAAD,OACLa,EAAQC,OAAOC,OAAO/D,KAAKC,MAAM4D,OACjCG,EAAM,EACFC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC1BD,EAAMH,EAAMI,KACXD,EAAMH,EAAMI,IAIpB,OACI,2BAAOzD,UAAU,aACb,+BACKsD,OAAOK,QAAQnE,KAAKC,MAAM4D,OAAOrB,KAAI,WAAgBC,GAAhB,uBAAE2B,EAAF,KAAQC,EAAR,YAClC,wBAAI3B,IAAKD,GACL,wBAAIjC,UAAU,YAAY,EAAK8D,cAAcF,IAC7C,wBAAI5D,UAAU,aAAa6D,GAC3B,wBAAI7D,UAAU,WAAW,kBAAC+D,EAAA,EAAD,CAAaC,IAAKH,EAAOL,IAAKA,a,oCAQjES,GACV,OAAOA,GACH,IAAK,KACD,MAAO,KACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,IAAK,UACD,MAAO,UACX,IAAK,iBACD,MAAO,SACX,IAAK,kBACD,MAAO,SACX,QACI,MAAO,a,sCAKf,OACI,2BAAOjE,UAAU,gBACb,+BACI,4BACI,wBAAIA,UAAU,iBAAd,WACA,4BAAKR,KAAKC,MAAMW,OAAhB,MACA,wBAAIJ,UAAU,iBAAd,WACA,4BAAKR,KAAKC,MAAMyE,OAAhB,QAEJ,4BACI,wBAAIlE,UAAU,iBAAd,eACA,4BAAI,4BAAKR,KAAKC,MAAM0E,UAAUnC,KAAK,SAACoC,EAAInC,GAAL,OAAiB,wBAAIC,IAAKD,GAAQmC,QACrE,wBAAIpE,UAAU,iBAAd,cACA,4BAAI,4BAAKR,KAAKC,MAAM4E,UAAUrC,KAAK,SAACsC,EAAIrC,GAAL,OAAiB,wBAAIC,IAAKD,GAAQqC,a,+BAQrF,OACI,yBAAKtE,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,iBACVR,KAAKC,MAAMI,KACZ,0BAAMG,UAAU,iBAAhB,IACMR,KAAKC,MAAMe,KAGrB,yBAAKR,UAAU,iBACVR,KAAK+E,gBAGd,yBAAKvE,UAAU,cACX,yBAAKQ,GAAG,QAAQJ,OAAO,QAAQC,MAAM,QAAQL,UAAU,QAAQM,IAAI,UAAUC,IAAKf,KAAKC,MAAMmD,QAC7F,yBAAK5C,UAAU,SACVR,KAAKgF,gBAGd,yBAAKxE,UAAU,oBACX,yBAAKA,UAAU,SACVR,KAAKC,MAAMgF,OAEhB,yBAAKzE,UAAU,eACVR,KAAKC,MAAMiF,YAAYtC,QAAQ,KAAM,OAG9C,yBAAKpC,UAAU,gBACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,qBAAhB,YAEHR,KAAKmF,sB,GA5HElE,aCGtBmE,E,YACF,WAAYnF,GAAO,IAAD,8BAChB,4CAAMA,KAEDM,KAAO,EAAKN,MAAMN,SAASW,MAAMC,KAEtC,EAAKD,MAAQ,CACX+E,WAAY,IAGd,EAAKjE,IAAM,qCAAuC,EAAKnB,MAAMJ,MAAMyF,OAAOjF,KAC1E,EAAKA,KAAO,GAEZ,EAAKmB,eAAiB,EAAKA,eAAeb,KAApB,gBAEtB,EAAK4E,YAdW,E,yEAiBN,IACNpD,EADK,OAGTJ,IAAMC,IAAIhC,KAAKoB,KAAKa,MAAK,SAACC,GACxBC,EAAOD,EAASC,QACfqD,SAAQ,WACTzD,IAAMC,IAAIG,EAAKsD,QAAQ9C,KAAKV,MAAK,SAACwD,GAChC,EAAKpF,KAAO8B,EAAK9B,KACjB,IAAI+C,EAAQjB,EAAKuD,QAAQC,cACrB/B,EAAQzB,EAAKyB,MAAMpB,KAAI,SAASoD,GAAQ,OAAOA,EAAK5C,KAAK3C,QACzDO,EAASuB,EAAKvB,OACd8D,EAASvC,EAAKuC,OACdG,EAAY1C,EAAK0C,UAAUrC,KAAI,SAASoD,GAAQ,OAAOA,EAAKC,QAAQxF,QACpEwD,EAAQC,OAAOgC,OAAP,MAAAhC,OAAM,CAAQ,IAAR,mBAAe3B,EAAK0B,MAAMrB,KAAI,SAACuD,GAAD,sBAAUA,EAAE3B,KAAK/D,KAAO0F,EAAEC,iBACtErB,EAAYc,EAAQtD,KAAK8D,WAAWzD,KAAI,SAASoD,GAAQ,OAAOA,EAAKvF,QACrE4E,EAAQQ,EAAQtD,KAAK+D,OAAOC,QAAO,SAAAJ,GAAC,MAAwB,OAApBA,EAAEK,SAAS/F,QAAegG,QAClEnB,EAAcO,EAAQtD,KAAKmE,oBAAoBH,QAAO,SAAAJ,GAAC,MAAwB,OAApBA,EAAEK,SAAS/F,QAAegG,QAEzF,EAAK/D,SAAS,CACZW,cAAe,kBAAC,EAAD,CAAejC,GAAImB,EAAKnB,GAAIX,KAAM,EAAKA,KAAM+C,MAAOA,EAAOQ,MAAOA,EAAOhD,OAAQA,EAAQ8D,OAAQA,EAAQG,UAAWA,EAAWF,UAAWA,EAAWd,MAAOA,EAAOoB,MAAOA,EAAMA,MAAOC,YAAaA,EAAYqB,wB,uCAOrOvG,KAAKC,MAAMC,QAAQC,KAAK,CAACC,SAAU,IAAKE,MAAO,CAAEC,KAAMP,KAAKO,U,+BAI1D,OACI,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YAAYC,QAAST,KAAKwB,gBACvC,kBAAC,IAAD,CAAMwB,KAAK,gBAEb,yBAAKxC,UAAU,UAAf,YAIDR,KAAKM,MAAM2C,mB,GA1DLhC,aAgENC,cAAWkE,GCrDXoB,MAZf,WACI,OACI,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjC,kBAAC,IAAD,CAAOuF,KAAK,iBAAiBC,UAAWvB,IACxC,kBAAC,IAAD,CAAUwB,KAAK,IAAIC,GAAG,SCLlCC,IAASC,OACL,kBAAC,IAAD,CAAQC,SAAUC,YACd,kBAAC,EAAD,OAEFvF,SAASwF,eAAe,SNuHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEdC,OAAM,SAAA3E,GACLC,QAAQD,MAAMA,EAAM4E,a","file":"static/js/main.d3279267.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './PokemonCard.css';\r\n\r\nclass PokemonCard extends Component{\r\n\r\n    cardClick({target}){\r\n        this.props.history.push({pathname: \"/pokemon/\" + this.props.name, state: { home: this.props.home }});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\" onClick={this.cardClick.bind(this)}>\r\n                <div className=\"titleContainer\">\r\n                    <div className=\"title\">{this.props.name}</div>\r\n                </div>\r\n                <div className=\"imageContainer\">\r\n                    <img height=\"104px\" width=\"104px\" className=\"image\" alt=\"pokemon\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+ this.props.id +\".png\"}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PokemonCard);","import React, { Component }       from 'react';\r\nimport axios                      from 'axios';\r\nimport {Icon}                     from 'antd';\r\nimport PokemonCard                from '../../Components/PokemonCard/PokemonCard';\r\n\r\nimport './home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.URL = \"https://pokeapi.co/api/v2/pokemon\"\r\n\r\n    if(this.props.location.state && this.props.location.state.home){\r\n      this.URL = this.props.location.state.home;\r\n    }\r\n\r\n    this.state = {\r\n      pokemon: \"\"\r\n    }\r\n\r\n    this.prevLink = \"\";\r\n    this.nextLink = \"\";\r\n\r\n    this.leftArrowClick = this.leftArrowClick.bind(this);\r\n    this.rightArrowClick = this.rightArrowClick.bind(this);\r\n\r\n    document.documentElement.style.setProperty(\"--primary-color\", \"rgba(85, 166, 156, 1)\");\r\n\r\n    this.getPokemon();\r\n  }\r\n\r\n\r\n  getPokemon(){\r\n    axios.get(this.URL).then((response) => {\r\n      try{\r\n        this.prevLink = response.data.previous;\r\n        this.nextLink = response.data.next;\r\n        this.setState({\r\n          pokemon: <ul className=\"cardList\">{response.data.results.map((pokemon, index) => (\r\n            <li className=\"cardListItem\" key={index}><PokemonCard id={pokemon.url.replace(\"https://pokeapi.co/api/v2/pokemon/\", \"\").replace(\"/\", \"\")} name={pokemon.name} url={pokemon.url} home={this.URL}/></li>\r\n          ))}</ul>\r\n        })\r\n      }  \r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  leftArrowClick(){\r\n    if(this.prevLink !== null){\r\n      this.URL = this.prevLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  rightArrowClick(){\r\n    if(this.nextLink !== null){\r\n      this.URL = this.nextLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"Content\">\r\n        <div className=\"navigationPanel\">\r\n          <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n            <Icon type=\"arrow-left\" />\r\n          </div>\r\n          <div className=\"title\">\r\n            Pokédex\r\n          </div>\r\n          <div className=\"rightArrow\" onClick={this.rightArrowClick}>\r\n            <Icon type=\"arrow-right\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"cardPanel\">\r\n            {this.state.pokemon}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './PokemonDetail.css';\r\nimport ColorThief from 'color-thief'\r\n\r\nclass PokemonDetail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //color thief tutorial for accessing image via google proxy\r\n        const colorThief = new ColorThief();\r\n        const image = new Image();\r\n\r\n        image.addEventListener('load', function(){\r\n            var color = colorThief.getColor(image);\r\n            document.documentElement.style.setProperty(\"--primary-color\", \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\");\r\n        })\r\n\r\n        let imageURL = this.props.image;\r\n        let googleProxyURL = 'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url=';\r\n\r\n        image.crossOrigin = 'Anonymous';\r\n        image.src = googleProxyURL + encodeURIComponent(imageURL);\r\n    }\r\n\r\n    renderTypes(){\r\n        return this.props.types.map((type, index) => (\r\n            <div key={index} className={\"type \" + type}>\r\n                <div className=\"text\">{type}</div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    renderStats(){\r\n        var stats = Object.values(this.props.stats);\r\n        var max = 0;\r\n        for(var i = 0; i < stats.length; i++){\r\n            if(max < stats[i]){\r\n                max = stats[i];\r\n            }\r\n        }\r\n\r\n        return (\r\n            <table className=\"statTable\">\r\n                <tbody>\r\n                    {Object.entries(this.props.stats).map(([stat, value], index) => (\r\n                        <tr key={index}>\r\n                            <td className=\"statName\">{this.getStatHeader(stat)}</td>\r\n                            <td className=\"statValue\">{value}</td>\r\n                            <td className=\"statBar\" ><ProgressBar now={value} max={max}/></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getStatHeader(header){\r\n        switch(header){\r\n            case \"hp\":\r\n                return \"HP\";\r\n            case \"speed\":\r\n                return \"Speed\"\r\n            case \"attack\":\r\n                return \"Attack\";\r\n            case \"defense\":\r\n                return \"Defense\";\r\n            case \"special-attack\":\r\n                return \"Sp Atk\";\r\n            case \"special-defense\":\r\n                return \"Sp Def\";\r\n            default:\r\n                return \"Unknown\";\r\n        }\r\n    }\r\n\r\n    renderProfile(){\r\n        return (\r\n            <table className=\"profileTable\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"abilityHeader\">Height:</td>\r\n                        <td>{this.props.height} m</td>\r\n                        <td className=\"abilityHeader\">Weight:</td>\r\n                        <td>{this.props.weight} kg</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"abilityHeader\">Egg Groups:</td>\r\n                        <td><ul>{this.props.eggGroups.map( (eg, index) => ( <li key={index}>{eg}</li> ))}</ul></td>\r\n                        <td className=\"abilityHeader\">Abilities:</td>\r\n                        <td><ul>{this.props.abilities.map( (ab, index) => ( <li key={index}>{ab}</li> ))}</ul></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailCard\">\r\n                <div className=\"titlePanel\">\r\n                    <div className=\"nameContainer\">\r\n                        {this.props.name}\r\n                        <span className=\"pokedexNumber\">\r\n                            #{this.props.id}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"typeContainer\">\r\n                        {this.renderTypes()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"statsPanel\">\r\n                    <img id=\"image\" height=\"130px\" width=\"130px\" className=\"image\" alt=\"pokemon\" src={this.props.image}/>\r\n                    <div className=\"stats\">\r\n                        {this.renderStats()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"descriptionPanel\">\r\n                    <div className=\"genus\">\r\n                        {this.props.genus}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        {this.props.description.replace(\"\\f\", \" \")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profilePanel\">\r\n                    <div className=\"profileHeader\">\r\n                        <span className=\"profileHeaderText\">Profile</span>\r\n                    </div>\r\n                    {this.renderProfile()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from 'react';\r\nimport './detail.css';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Icon} from 'antd';\r\nimport PokemonDetail from '../../Components/PokemonDetail/PokemonDetail';\r\n\r\n\r\nclass Detail extends Component{\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.home = this.props.location.state.home;\r\n\r\n      this.state = {\r\n        detailView: \"\"\r\n      }\r\n      \r\n      this.URL = \"https://pokeapi.co/api/v2/pokemon/\" + this.props.match.params.name;\r\n      this.name = \"\";\r\n\r\n      this.leftArrowClick = this.leftArrowClick.bind(this);\r\n\r\n      this.getDetail();\r\n    }\r\n\r\n    getDetail(){\r\n      let data;\r\n\r\n      axios.get(this.URL).then((response) => {\r\n        data = response.data;\r\n      }).finally(() => {\r\n        axios.get(data.species.url).then((species) => {\r\n          this.name = data.name;\r\n          var image = data.sprites.front_default;\r\n          var types = data.types.map(function(item) { return item.type.name; });\r\n          var height = data.height;\r\n          var weight = data.weight;\r\n          var abilities = data.abilities.map(function(item) { return item.ability.name; });\r\n          var stats = Object.assign({}, ...data.stats.map((x) => ({[x.stat.name]: x.base_stat})));\r\n          var eggGroups = species.data.egg_groups.map(function(item) { return item.name; });\r\n          var genus = species.data.genera.filter(x => x.language.name === 'en').shift();\r\n          var description = species.data.flavor_text_entries.filter(x => x.language.name === 'en').shift();\r\n\r\n          this.setState({\r\n            PokemonDetail: <PokemonDetail id={data.id} name={this.name} image={image} types={types} height={height} weight={weight} abilities={abilities} eggGroups={eggGroups} stats={stats} genus={genus.genus} description={description.flavor_text} />\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    leftArrowClick(){\r\n      this.props.history.push({pathname: \"/\", state: { home: this.home }});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"detailContent\">\r\n              <div className=\"headerPanel\">\r\n                <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n                  <Icon type=\"arrow-left\" />\r\n                </div>\r\n                <div className=\"header\">\r\n                  Go Back\r\n                </div>\r\n              </div>\r\n              {this.state.PokemonDetail}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Detail);","import React from 'react';\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport \"./app.css\";\r\n\r\nimport Home from \"./Pages/Home/home\";\r\nimport Detail from \"./Pages/Detail/detail\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/pokemon/:name\" component={Detail}/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './app'\r\n\r\nReactDOM.render(            \r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <App/>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}