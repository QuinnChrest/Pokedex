{"version":3,"sources":["serviceWorker.js","Components/PokemonCard/PokemonCard.jsx","Pages/Home/home.js","Components/PokemonDetail/PokemonDetail.jsx","Pages/Detail/detail.js","app.js","index.js"],"names":["Boolean","window","location","hostname","match","PokemonCard","target","this","props","history","push","name","className","onClick","cardClick","bind","height","width","alt","src","id","Component","withRouter","Home","state","pokemon","URL","prevLink","nextLink","leftArrowClick","rightArrowClick","document","documentElement","style","setProperty","getPokemon","axios","get","then","response","data","previous","next","setState","results","map","url","replace","error","console","log","type","PokemonDetail","colorThief","ColorThief","image","Image","addEventListener","color","getColor","imageURL","crossOrigin","encodeURIComponent","types","key","stats","Object","values","max","i","length","entries","stat","value","getStatHeader","ProgressBar","now","header","weight","eggGroups","eg","abilities","ab","renderTypes","renderStats","genus","description","renderProfile","Detail","detailView","params","getDetail","finally","species","sprites","front_default","item","ability","assign","x","base_stat","egg_groups","genera","filter","language","shift","flavor_text_entries","flavor_text","App","exact","path","component","from","to","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"mSAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sGCdAC,G,4LAEiB,EAARC,OACPC,KAAKC,MAAMC,QAAQC,KAAK,YAAcH,KAAKC,MAAMG,Q,+BAIjD,OACI,yBAAKC,UAAU,OAAOC,QAASN,KAAKO,UAAUC,KAAKR,OAC/C,yBAAKK,UAAU,kBACX,yBAAKA,UAAU,SAASL,KAAKC,MAAMG,OAEvC,yBAAKC,UAAU,kBACX,yBAAKI,OAAO,QAAQC,MAAM,QAAQL,UAAU,QAAQM,IAAI,UAAUC,IAAK,4EAA6EZ,KAAKC,MAAMY,GAAI,e,GAb7JC,cAoBXC,cAAWjB,GCwDXkB,G,mBAxEb,WAAYf,GAAO,IAAD,8BAChB,4CAAMA,KACDgB,MAAQ,CACXC,QAAS,IAGX,EAAKC,IAAM,oCACX,EAAKC,SAAW,GAChB,EAAKC,SAAW,GAEhB,EAAKC,eAAiB,EAAKA,eAAed,KAApB,gBACtB,EAAKe,gBAAkB,EAAKA,gBAAgBf,KAArB,gBAEvBgB,SAASC,gBAAgBC,MAAMC,YAAY,kBAAmB,yBAE9D,EAAKC,aAfW,E,0EAmBL,IAAD,OACVC,IAAMC,IAAI9B,KAAKmB,KAAKY,MAAK,SAACC,GACxB,IACE,EAAKZ,SAAWY,EAASC,KAAKC,SAC9B,EAAKb,SAAWW,EAASC,KAAKE,KAC9B,EAAKC,SAAS,CACZlB,QAAS,wBAAIb,UAAU,YAAY2B,EAASC,KAAKI,QAAQC,KAAI,SAAApB,GAAO,OAClE,wBAAIb,UAAU,gBAAe,kBAAC,EAAD,CAAaQ,GAAIK,EAAQqB,IAAIC,QAAQ,qCAAsC,IAAIA,QAAQ,IAAK,IAAKpC,KAAMc,EAAQd,KAAMmC,IAAKrB,EAAQqB,aAIrK,MAAME,GACJC,QAAQC,IAAIF,S,uCAMK,OAAlBzC,KAAKoB,WACNpB,KAAKmB,IAAMnB,KAAKoB,SAChBpB,KAAK4B,gB,wCAKc,OAAlB5B,KAAKqB,WACNrB,KAAKmB,IAAMnB,KAAKqB,SAChBrB,KAAK4B,gB,+BAKP,OACE,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAYC,QAASN,KAAKsB,gBACvC,kBAAC,IAAD,CAAMsB,KAAK,gBAEb,yBAAKvC,UAAU,SAAf,cAGA,yBAAKA,UAAU,aAAaC,QAASN,KAAKuB,iBACxC,kBAAC,IAAD,CAAMqB,KAAK,kBAGf,yBAAKvC,UAAU,aACVL,KAAKiB,MAAMC,c,GAlELJ,c,mEC+HJ+B,E,YAhIX,WAAY5C,GAAO,IAAD,sBACd,4CAAMA,IAGN,IAAM6C,EAAa,IAAIC,IACjBC,EAAQ,IAAIC,MAElBD,EAAME,iBAAiB,QAAQ,WAC3B,IAAIC,EAAQL,EAAWM,SAASJ,GAChCxB,SAASC,gBAAgBC,MAAMC,YAAY,kBAAmB,OAASwB,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,QAGxH,IAAIE,EAAW,EAAKpD,MAAM+C,MAZZ,OAedA,EAAMM,YAAc,YACpBN,EAAMpC,IAHe,4GAGQ2C,mBAAmBF,GAhBlC,E,2EAoBd,OAAOrD,KAAKC,MAAMuD,MAAMlB,KAAI,SAACM,GAAD,OACxB,yBAAKa,IAAKb,EAAKa,IAAKpD,UAAW,QAAUuC,GACrC,yBAAKvC,UAAU,QAAQuC,S,oCAQ/B,IAHU,IAAD,OACLc,EAAQC,OAAOC,OAAO5D,KAAKC,MAAMyD,OACjCG,EAAM,EACFC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC1BD,EAAMH,EAAMI,KACXD,EAAMH,EAAMI,IAIpB,OACI,2BAAOzD,UAAU,aACb,+BACKsD,OAAOK,QAAQhE,KAAKC,MAAMyD,OAAOpB,KAAI,mCAAE2B,EAAF,KAAQC,EAAR,YAClC,4BACI,wBAAI7D,UAAU,YAAY,EAAK8D,cAAcF,IAC7C,wBAAI5D,UAAU,aAAa6D,GAC3B,wBAAI7D,UAAU,WAAW,kBAAC+D,EAAA,EAAD,CAAaC,IAAKH,EAAOL,IAAKA,a,oCAQjES,GACV,OAAOA,GACH,IAAK,KACD,MAAO,KACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,IAAK,UACD,MAAO,UACX,IAAK,iBACD,MAAO,SACX,IAAK,kBACD,MAAO,Y,sCAKf,OACI,2BAAOjE,UAAU,gBACb,+BACI,4BACI,wBAAIA,UAAU,iBAAd,WACA,4BAAKL,KAAKC,MAAMQ,OAAhB,MACA,wBAAIJ,UAAU,iBAAd,WACA,4BAAKL,KAAKC,MAAMsE,OAAhB,QAEJ,4BACI,wBAAIlE,UAAU,iBAAd,eACA,4BAAI,4BAAKL,KAAKC,MAAMuE,UAAUlC,KAAK,SAAAmC,GAAE,OAAM,4BAAKA,QAChD,wBAAIpE,UAAU,iBAAd,cACA,4BAAI,4BAAKL,KAAKC,MAAMyE,UAAUpC,KAAK,SAAAqC,GAAE,OAAM,4BAAKA,a,+BAQhE,OACI,yBAAKtE,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,iBACVL,KAAKC,MAAMG,KACZ,0BAAMC,UAAU,iBAAhB,IACML,KAAKC,MAAMY,KAGrB,yBAAKR,UAAU,iBACVL,KAAK4E,gBAGd,yBAAKvE,UAAU,cACX,yBAAKQ,GAAG,QAAQJ,OAAO,QAAQC,MAAM,QAAQL,UAAU,QAAQM,IAAI,UAAUC,IAAKZ,KAAKC,MAAM+C,QAC7F,yBAAK3C,UAAU,SACVL,KAAK6E,gBAGd,yBAAKxE,UAAU,oBACX,yBAAKA,UAAU,SACVL,KAAKC,MAAM6E,OAEhB,yBAAKzE,UAAU,eACVL,KAAKC,MAAM8E,YAAYvC,QAAQ,KAAM,OAG9C,yBAAKnC,UAAU,gBACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,qBAAhB,YAEHL,KAAKgF,sB,GA1HElE,aCGtBmE,E,YACF,WAAYhF,GAAO,IAAD,8BACd,4CAAMA,KAEDgB,MAAQ,CACXiE,WAAY,IAGd,EAAK/D,IAAM,qCAAuC,EAAKlB,MAAMJ,MAAMsF,OAAO/E,KAC1E,EAAKA,KAAO,GAEZ,EAAKkB,eAAiB,EAAKA,eAAed,KAApB,gBAEtB,EAAK4E,YAZS,E,yEAeN,IACNnD,EADK,OAGTJ,IAAMC,IAAI9B,KAAKmB,KAAKY,MAAK,SAACC,GACxBC,EAAOD,EAASC,QACfoD,SAAQ,WACTxD,IAAMC,IAAIG,EAAKqD,QAAQ/C,KAAKR,MAAK,SAACuD,GAChC,EAAKlF,KAAO6B,EAAK7B,KACjB,IAAI4C,EAAQf,EAAKsD,QAAQC,cACrBhC,EAAQvB,EAAKuB,MAAMlB,KAAI,SAASmD,GAAQ,OAAOA,EAAK7C,KAAKxC,QACzDK,EAASwB,EAAKxB,OACd8D,EAAStC,EAAKsC,OACdG,EAAYzC,EAAKyC,UAAUpC,KAAI,SAASmD,GAAQ,OAAOA,EAAKC,QAAQtF,QACpEsD,EAAQC,OAAOgC,OAAP,MAAAhC,OAAM,CAAQ,IAAR,mBAAe1B,EAAKyB,MAAMpB,KAAI,SAACsD,GAAD,sBAAUA,EAAE3B,KAAK7D,KAAOwF,EAAEC,iBACtErB,EAAYc,EAAQrD,KAAK6D,WAAWxD,KAAI,SAASmD,GAAQ,OAAOA,EAAKrF,QACrE0E,EAAQQ,EAAQrD,KAAK8D,OAAOC,QAAO,SAAAJ,GAAC,MAAuB,MAAnBA,EAAEK,SAAS7F,QAAc8F,QACjEnB,EAAcO,EAAQrD,KAAKkE,oBAAoBH,QAAO,SAAAJ,GAAC,MAAuB,MAAnBA,EAAEK,SAAS7F,QAAc8F,QAExF,EAAK9D,SAAS,CACZS,cAAe,kBAAC,EAAD,CAAehC,GAAIoB,EAAKpB,GAAIT,KAAM,EAAKA,KAAM4C,MAAOA,EAAOQ,MAAOA,EAAO/C,OAAQA,EAAQ8D,OAAQA,EAAQG,UAAWA,EAAWF,UAAWA,EAAWd,MAAOA,EAAOoB,MAAOA,EAAMA,MAAOC,YAAaA,EAAYqB,wB,uCAOrOpG,KAAKC,MAAMC,QAAQC,KAAK,O,+BAItB,OACI,yBAAKE,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YAAYC,QAASN,KAAKsB,gBACvC,kBAAC,IAAD,CAAMsB,KAAK,gBAEb,yBAAKvC,UAAU,UACZL,KAAKI,OAGTJ,KAAKiB,MAAM4B,mB,GAxDL/B,aA8DNC,cAAWkE,GCnDXoB,MAZf,WACI,OACI,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjC,kBAAC,IAAD,CAAOuF,KAAK,iBAAiBC,UAAWvB,IACxC,kBAAC,IAAD,CAAUwB,KAAK,IAAIC,GAAG,SCLlCC,IAASC,OACL,kBAAC,IAAD,CAAQC,SAAUC,YACd,kBAAC,EAAD,OAEFtF,SAASuF,eAAe,SNuHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdC,OAAM,SAAA5E,GACLC,QAAQD,MAAMA,EAAM6E,a","file":"static/js/main.5ef116b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './PokemonCard.css';\r\n\r\nclass PokemonCard extends Component{\r\n\r\n    cardClick({target}){\r\n        this.props.history.push(\"/pokemon/\" + this.props.name);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\" onClick={this.cardClick.bind(this)}>\r\n                <div className=\"titleContainer\">\r\n                    <div className=\"title\">{this.props.name}</div>\r\n                </div>\r\n                <div className=\"imageContainer\">\r\n                    <img height=\"104px\" width=\"104px\" className=\"image\" alt=\"pokemon\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+ this.props.id +\".png\"}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PokemonCard);","import React, { Component }       from 'react';\r\nimport axios                      from 'axios';\r\nimport {Icon}                     from 'antd';\r\nimport PokemonCard                from '../../Components/PokemonCard/PokemonCard';\r\n\r\nimport './home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      pokemon: \"\"\r\n    }\r\n\r\n    this.URL = \"https://pokeapi.co/api/v2/pokemon\"\r\n    this.prevLink = \"\";\r\n    this.nextLink = \"\";\r\n\r\n    this.leftArrowClick = this.leftArrowClick.bind(this);\r\n    this.rightArrowClick = this.rightArrowClick.bind(this);\r\n\r\n    document.documentElement.style.setProperty(\"--primary-color\", \"rgba(85, 166, 156, 1)\");\r\n\r\n    this.getPokemon();\r\n  }\r\n\r\n\r\n  getPokemon(){\r\n    axios.get(this.URL).then((response) => {\r\n      try{\r\n        this.prevLink = response.data.previous;\r\n        this.nextLink = response.data.next;\r\n        this.setState({\r\n          pokemon: <ul className=\"cardList\">{response.data.results.map(pokemon => (\r\n            <li className=\"cardListItem\"><PokemonCard id={pokemon.url.replace(\"https://pokeapi.co/api/v2/pokemon/\", \"\").replace(\"/\", \"\")} name={pokemon.name} url={pokemon.url}/></li>\r\n          ))}</ul>\r\n        })\r\n      }  \r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  leftArrowClick(){\r\n    if(this.prevLink !== null){\r\n      this.URL = this.prevLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  rightArrowClick(){\r\n    if(this.nextLink !== null){\r\n      this.URL = this.nextLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"Content\">\r\n        <div className=\"navigationPanel\">\r\n          <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n            <Icon type=\"arrow-left\" />\r\n          </div>\r\n          <div className=\"title\">\r\n            Pokédex\r\n          </div>\r\n          <div className=\"rightArrow\" onClick={this.rightArrowClick}>\r\n            <Icon type=\"arrow-right\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"cardPanel\">\r\n            {this.state.pokemon}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './PokemonDetail.css';\r\nimport ColorThief from 'color-thief'\r\n\r\nclass PokemonDetail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //color thief tutorial for accessing image via google proxy\r\n        const colorThief = new ColorThief\r\n        const image = new Image();\r\n\r\n        image.addEventListener('load', function(){\r\n            var color = colorThief.getColor(image);\r\n            document.documentElement.style.setProperty(\"--primary-color\", \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\");\r\n        })\r\n\r\n        let imageURL = this.props.image;\r\n        let googleProxyURL = 'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url=';\r\n\r\n        image.crossOrigin = 'Anonymous';\r\n        image.src = googleProxyURL + encodeURIComponent(imageURL);\r\n    }\r\n\r\n    renderTypes(){\r\n        return this.props.types.map((type) => (\r\n            <div key={type.key} className={\"type \" + type}>\r\n                <div className=\"text\">{type}</div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    renderStats(){\r\n        var stats = Object.values(this.props.stats);\r\n        var max = 0;\r\n        for(var i = 0; i < stats.length; i++){\r\n            if(max < stats[i]){\r\n                max = stats[i];\r\n            }\r\n        }\r\n\r\n        return (\r\n            <table className=\"statTable\">\r\n                <tbody>\r\n                    {Object.entries(this.props.stats).map(([stat, value]) => (\r\n                        <tr>\r\n                            <td className=\"statName\">{this.getStatHeader(stat)}</td>\r\n                            <td className=\"statValue\">{value}</td>\r\n                            <td className=\"statBar\" ><ProgressBar now={value} max={max}/></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getStatHeader(header){\r\n        switch(header){\r\n            case \"hp\":\r\n                return \"HP\";\r\n            case \"speed\":\r\n                return \"Speed\"\r\n            case \"attack\":\r\n                return \"Attack\";\r\n            case \"defense\":\r\n                return \"Defense\";\r\n            case \"special-attack\":\r\n                return \"Sp Atk\";\r\n            case \"special-defense\":\r\n                return \"Sp Def\";\r\n        }\r\n    }\r\n\r\n    renderProfile(){\r\n        return (\r\n            <table className=\"profileTable\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"abilityHeader\">Height:</td>\r\n                        <td>{this.props.height} m</td>\r\n                        <td className=\"abilityHeader\">Weight:</td>\r\n                        <td>{this.props.weight} kg</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"abilityHeader\">Egg Groups:</td>\r\n                        <td><ul>{this.props.eggGroups.map( eg => ( <li>{eg}</li> ))}</ul></td>\r\n                        <td className=\"abilityHeader\">Abilities:</td>\r\n                        <td><ul>{this.props.abilities.map( ab => ( <li>{ab}</li> ))}</ul></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailCard\">\r\n                <div className=\"titlePanel\">\r\n                    <div className=\"nameContainer\">\r\n                        {this.props.name}\r\n                        <span className=\"pokedexNumber\">\r\n                            #{this.props.id}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"typeContainer\">\r\n                        {this.renderTypes()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"statsPanel\">\r\n                    <img id=\"image\" height=\"130px\" width=\"130px\" className=\"image\" alt=\"pokemon\" src={this.props.image}/>\r\n                    <div className=\"stats\">\r\n                        {this.renderStats()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"descriptionPanel\">\r\n                    <div className=\"genus\">\r\n                        {this.props.genus}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        {this.props.description.replace(\"\\f\", \" \")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profilePanel\">\r\n                    <div className=\"profileHeader\">\r\n                        <span className=\"profileHeaderText\">Profile</span>\r\n                    </div>\r\n                    {this.renderProfile()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from 'react';\r\nimport './detail.css';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Icon} from 'antd';\r\nimport PokemonDetail from '../../Components/PokemonDetail/PokemonDetail';\r\n\r\n\r\nclass Detail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n          detailView: \"\"\r\n        }\r\n\r\n        this.URL = \"https://pokeapi.co/api/v2/pokemon/\" + this.props.match.params.name;\r\n        this.name = \"\";\r\n\r\n        this.leftArrowClick = this.leftArrowClick.bind(this);\r\n\r\n        this.getDetail();\r\n    }\r\n\r\n    getDetail(){\r\n      let data;\r\n\r\n      axios.get(this.URL).then((response) => {\r\n        data = response.data;\r\n      }).finally(() => {\r\n        axios.get(data.species.url).then((species) => {\r\n          this.name = data.name;\r\n          var image = data.sprites.front_default;\r\n          var types = data.types.map(function(item) { return item.type.name; });\r\n          var height = data.height;\r\n          var weight = data.weight;\r\n          var abilities = data.abilities.map(function(item) { return item.ability.name; });\r\n          var stats = Object.assign({}, ...data.stats.map((x) => ({[x.stat.name]: x.base_stat})));\r\n          var eggGroups = species.data.egg_groups.map(function(item) { return item.name; });\r\n          var genus = species.data.genera.filter(x => x.language.name == 'en').shift();\r\n          var description = species.data.flavor_text_entries.filter(x => x.language.name == 'en').shift();\r\n\r\n          this.setState({\r\n            PokemonDetail: <PokemonDetail id={data.id} name={this.name} image={image} types={types} height={height} weight={weight} abilities={abilities} eggGroups={eggGroups} stats={stats} genus={genus.genus} description={description.flavor_text} />\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    leftArrowClick(){\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"detailContent\">\r\n              <div className=\"headerPanel\">\r\n                <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n                  <Icon type=\"arrow-left\" />\r\n                </div>\r\n                <div className=\"header\">\r\n                  {this.name}\r\n                </div>\r\n              </div>\r\n              {this.state.PokemonDetail}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Detail);","import React from 'react';\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport \"./app.css\";\r\n\r\nimport Home from \"./Pages/Home/home\";\r\nimport Detail from \"./Pages/Detail/detail\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/pokemon/:name\" component={Detail}/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './app'\r\n\r\nReactDOM.render(            \r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <App/>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}