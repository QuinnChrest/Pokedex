{"version":3,"sources":["serviceWorker.js","Components/PokemonCard/PokemonCard.jsx","Pages/Home/home.js","Components/PokemonDetail/PokemonDetail.jsx","Pages/Detail/detail.js","index.js"],"names":["Boolean","window","location","hostname","match","PokemonCard","target","href","this","props","id","types","map","type","key","className","onClick","cardClick","bind","name","height","width","alt","src","image","renderTypes","Component","Home","search","e","undefined","searchValue","URL","getPokemon","document","getElementById","style","display","state","pokemon","prevLink","nextLink","leftArrowClick","rightArrowClick","onSearchChange","closeSearch","axios","get","then","response","data","links","prev","next","setState","error","console","log","value","placeholder","onKeyPress","onChangeCapture","PokemonDetail","colorThief","ColorThief","Image","addEventListener","color","getColor","documentElement","setProperty","imageURL","crossOrigin","encodeURIComponent","stats","Object","values","max","i","length","entries","stat","getStatHeader","ProgressBar","now","header","weight","eggGroups","eg","abilities","ab","renderStats","genus","description","renderProfile","Detail","detailView","params","getDetail","egg_groups","ReactDOM","render","basename","process","path","component","from","to","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f7443e75.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './PokemonCard.css';\r\n\r\nclass PokemonCard extends Component{\r\n\r\n    cardClick({target}){\r\n        window.location.href = \"/Pokedex/pokemon/\" + this.props.id;\r\n    }\r\n\r\n    renderTypes(){\r\n        return this.props.types.map(type => (\r\n            <div key={type.key} className={\"type \" + type}>\r\n                <div className=\"text\">{type}</div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\" onClick={this.cardClick.bind(this)}>\r\n                <div className=\"titleContainer\">\r\n                    <div className=\"title\">{this.props.name}</div>\r\n                </div>\r\n                <div className=\"imageContainer\">\r\n                    <img height=\"104px\" width=\"104px\" className=\"image\" alt=\"pokemon\" src={this.props.image}/>\r\n                </div>\r\n                <div className=\"typeContainer\">\r\n                    {this.renderTypes()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonCard;","import React, { Component } from 'react';\r\nimport './home.css';\r\nimport axios from 'axios';\r\nimport {Icon} from 'antd';\r\nimport PokemonCard from '../../Components/PokemonCard/PokemonCard';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      pokemon: \"\"\r\n    }\r\n\r\n    this.URL = \"https://intern-pokedex.myriadapps.com/api/v1/pokemon\"\r\n    this.prevLink = \"\";\r\n    this.nextLink = \"\";\r\n\r\n    this.leftArrowClick = this.leftArrowClick.bind(this);\r\n    this.rightArrowClick = this.rightArrowClick.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.closeSearch = this.closeSearch.bind(this);\r\n\r\n    this.getPokemon();\r\n  }\r\n\r\n\r\n  getPokemon(){\r\n    axios.get(this.URL).then((response) => {\r\n      try{\r\n        this.prevLink = response.data.links.prev;\r\n        this.nextLink = response.data.links.next;\r\n        this.setState({\r\n          pokemon: <ul className=\"cardList\">{response.data.data.map(pokemon => (\r\n            <li className=\"cardListItem\"><PokemonCard id={pokemon.id} name={pokemon.name} image={pokemon.image} types={pokemon.types}/></li>\r\n          ))}</ul>\r\n        })\r\n      }  \r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  leftArrowClick(){\r\n    if(this.prevLink !== null){\r\n      this.URL = this.prevLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  rightArrowClick(){\r\n    if(this.nextLink !== null){\r\n      this.URL = this.nextLink;\r\n      this.getPokemon();\r\n    }\r\n  }\r\n\r\n  onSearchChange({target}){\r\n    this.searchValue = target.value;\r\n  }\r\n\r\n  search = (e) => { \r\n    if(e.key === \"Enter\" && this.searchValue !== undefined){\r\n      this.URL = \"https://intern-pokedex.myriadapps.com/api/v1/pokemon?name=\" + this.searchValue;\r\n      this.getPokemon();\r\n      document.getElementById(\"closeIcon\").style.display = \"inline-block\";\r\n    }\r\n  }\r\n\r\n  closeSearch(){\r\n    document.getElementById(\"search\").value = \"\";\r\n    document.getElementById(\"closeIcon\").style.display = \"none\";\r\n    this.URL = \"https://intern-pokedex.myriadapps.com/api/v1/pokemon\";\r\n    this.getPokemon();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"Content\">\r\n        <div className=\"navigationPanel\">\r\n          <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n            <Icon type=\"arrow-left\" />\r\n          </div>\r\n          <div className=\"searchBar\">\r\n            <div className=\"searchIcon\">\r\n              <Icon type=\"search\"/>\r\n            </div>\r\n            <input type=\"text\" id=\"search\" className=\"search\" placeholder=\"Pokédex\" onKeyPress={this.search} onChangeCapture={this.onSearchChange}/>\r\n            <div id=\"closeIcon\" className=\"closeIcon\" onClick={this.closeSearch}>\r\n              <Icon type=\"close\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"rightArrow\" onClick={this.rightArrowClick}>\r\n            <Icon type=\"arrow-right\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"cardPanel\">\r\n            {this.state.pokemon}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './PokemonDetail.css';\r\nimport ColorThief from 'color-thief'\r\n\r\nclass PokemonDetail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //color thief tutorial for accessing image via google proxy\r\n        const colorThief = new ColorThief\r\n        const image = new Image();\r\n\r\n        image.addEventListener('load', function(){\r\n            var color = colorThief.getColor(image);\r\n            document.documentElement.style.setProperty(\"--primary-color\", \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\");\r\n        })\r\n\r\n        let imageURL = this.props.image;\r\n        let googleProxyURL = 'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url=';\r\n\r\n        image.crossOrigin = 'Anonymous';\r\n        image.src = googleProxyURL + encodeURIComponent(imageURL);\r\n\r\n    }\r\n\r\n    renderTypes(){\r\n        return this.props.types.map((type) => (\r\n            <div key={type.key} className={\"type \" + type}>\r\n                <div className=\"text\">{type}</div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    renderStats(){\r\n        var stats = Object.values(this.props.stats);\r\n        var max = 0;\r\n        for(var i = 0; i < stats.length; i++){\r\n            if(max < stats[i]){\r\n                max = stats[i];\r\n            }\r\n        }\r\n\r\n        return (\r\n            <table className=\"statTable\">\r\n                {Object.entries(this.props.stats).map(([stat, value]) => (\r\n                    <tr>\r\n                        <td className=\"statName\">{this.getStatHeader(stat)}</td>\r\n                        <td className=\"statValue\">{value}</td>\r\n                        <td className=\"statBar\" ><ProgressBar now={value} max={max}/></td>\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getStatHeader(header){\r\n        switch(header){\r\n            case \"hp\":\r\n                return \"HP\";\r\n            case \"speed\":\r\n                return \"Speed\"\r\n            case \"attack\":\r\n                return \"Attack\";\r\n            case \"defense\":\r\n                return \"Defense\";\r\n            case \"special-attack\":\r\n                return \"Sp Atk\";\r\n            case \"special-defense\":\r\n                return \"Sp Def\";\r\n        }\r\n    }\r\n\r\n    renderProfile(){\r\n        return (\r\n            <table className=\"profileTable\">\r\n                <tr>\r\n                    <td className=\"abilityHeader\">Height:</td>\r\n                    <td>{this.props.height} m</td>\r\n                    <td className=\"abilityHeader\">Weight:</td>\r\n                    <td>{this.props.weight} kg</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"abilityHeader\">Egg Groups:</td>\r\n                    <td><ul>{this.props.eggGroups.map( eg => ( <li>{eg}</li> ))}</ul></td>\r\n                    <td className=\"abilityHeader\">Abilities:</td>\r\n                    <td><ul>{this.props.abilities.map( ab => ( <li>{ab}</li> ))}</ul></td>\r\n                </tr>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailCard\">\r\n                <div className=\"titlePanel\">\r\n                    <div className=\"nameContainer\">\r\n                        {this.props.name}\r\n                        <span className=\"pokedexNumber\">\r\n                            #{this.props.id}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"typeContainer\">\r\n                        {this.renderTypes()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"statsPanel\">\r\n                    <img id=\"image\" height=\"130px\" width=\"130px\" className=\"image\" alt=\"pokemon\" src={this.props.image}/>\r\n                    <div className=\"stats\">\r\n                        {this.renderStats()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"descriptionPanel\">\r\n                    <div className=\"genus\">\r\n                        {this.props.genus}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        {this.props.description}\r\n                    </div>\r\n                </div>\r\n                <div className=\"profilePanel\">\r\n                    <div className=\"profileHeader\">\r\n                        <span className=\"profileHeaderText\">Profile</span>\r\n                    </div>\r\n                    {this.renderProfile()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from 'react';\r\nimport './detail.css';\r\nimport axios from 'axios';\r\nimport {Icon} from 'antd';\r\nimport PokemonDetail from '../../Components/PokemonDetail/PokemonDetail';\r\n\r\n\r\nclass Detail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n          detailView: \"\"\r\n        }\r\n\r\n        this.URL = \"https://intern-pokedex.myriadapps.com/api/v1/pokemon/\" + this.props.match.params.id;\r\n        this.name = \"\";\r\n\r\n        this.getDetail();\r\n    }\r\n\r\n    getDetail(){\r\n        axios.get(this.URL).then((response) => {\r\n          try{\r\n            this.name = response.data.data.name;\r\n            var image = response.data.data.image;\r\n            var types = response.data.data.types;\r\n            var height = response.data.data.height;\r\n            var weight = response.data.data.weight;\r\n            var abilities = response.data.data.abilities;\r\n            var eggGroups = response.data.data.egg_groups;\r\n            var stats = response.data.data.stats;\r\n            var genus = response.data.data.genus;\r\n            var description = response.data.data.description;\r\n            this.setState({\r\n              PokemonDetail: <PokemonDetail id={this.props.match.params.id} name={this.name} image={image} types={types} height={height} weight={weight} abilities={abilities} eggGroups={eggGroups} stats={stats} genus={genus} description={description} />\r\n            })\r\n          }  \r\n          catch(error){\r\n            console.log(error);\r\n          }\r\n        })\r\n    }\r\n\r\n    leftArrowClick(){\r\n      window.location.href = \"/home\";\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"detailContent\">\r\n              <div className=\"headerPanel\">\r\n                <div className=\"leftArrow\" onClick={this.leftArrowClick}>\r\n                  <Icon type=\"arrow-left\" />\r\n                </div>\r\n                <div className=\"header\">\r\n                  {this.name}\r\n                </div>\r\n              </div>\r\n              {this.state.PokemonDetail}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from \"./Pages/Home/home\";\r\nimport Detail from \"./Pages/Detail/detail\";\r\n\r\nReactDOM.render(            \r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n            <Route path=\"/Pokedex/home\" component={Home}/>\r\n            <Route path=\"/Pokedex/search/:search\" component={Home}/>\r\n            <Route path=\"/Pokedex/pokemon/:id\" component={Detail}/>\r\n            <Redirect from=\"*\" to=\"/Pokedex/home\"/>\r\n        </Switch>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}